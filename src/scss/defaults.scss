@import "fonts", "colors", "mixins";

/*===========================================*/
// Variables
/*===========================================*/
$minWidth: 320px;
$maxWidth: 1152;
// Main content area width
$maxWidthContainer: 856;
// Header menu width
$headerMaxWidth: 1032;

// =======================
$md1: $maxWidthContainer + 12;
$md2: 992;
$md3: 768;
$md4: 480;
// =======================
// Breakpoints
$breakpoints: (
    "phone": 400px,
    "phone-wide": 480px,
    "phablet": 560px,
    "tablet-small": 640px,
    "tablet": 768px,
    "tablet-wide": 1024px,
    "desktop": 1248px,
    "desktop-wide": 1440px,
);
// 40
$phoneRem: map_get($breakpoints, phone) / 10 / 1px;
// 48
$phone-wideRem: map_get($breakpoints, phone-wide) / 10 / 1px;
// 56
$phabletRem: map_get($breakpoints, phablet) / 10 / 1px;
// 64
$tablet-smallRem: map_get($breakpoints, tablet-small) / 10 / 1px;
// 76.8
$tabletRem: map_get($breakpoints, tablet) / 10 / 1px;
// 102.4
$tablet-wideRem: map_get($breakpoints, tablet-wide) / 10 / 1px;
// 124.8
$desktopRem: map_get($breakpoints, desktop) / 10 / 1px;
// 144
$desktop-wideRem: map_get($breakpoints, desktop-wide) / 10 / 1px;

// Use this to get a value from this map
// map-get($breakpoints, "phone");
/*===========================================*/
//  Imports
/*===========================================*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

*:focus {
    outline: none;
    box-shadow: 0 0 0 0.7rem rgba(134, 149, 164, 0.5);
}

html {
    /* decreases default root element font size to 10px from 16px */
    // font-size: 62.5%;

    font-size: calc(10 / 16) * 100% !important;

    // @media (max-width: ($md2+px)) {
    //     font-size: calc(11 / 16) * 100%;
    // }
    @media (max-width: ($md1 + px)) {
        font-size: calc(10 / 16) * 100% !important;
    }
    @media (max-width: ($md3+px)) {
        font-size: calc(9 / 16) * 100% !important;
    }
    @media (max-width: ($md4+px)) {
        font-size: calc(8 / 16) * 100% !important;
    }
}

// Default font-family
$fontFamily: "Heebo";

body {
    ul {
        list-style-type: none;
    }
    a {
        text-decoration: none;
    }
    font-family: $fontFamily, sans-serif;
    line-height: 1;
    font-weight: 400;
    color: $cDark;
}

/*===========================================*/

/*===========================================*/
// Text styles
._text {
    font-size: 1.6rem;
    line-height: 2.4rem;
}

/*===========================================*/
// Default styling classes
._centered {
    margin: 0 auto;
}

._full-width {
    align-self: stretch;
}

.wrapper {
    width: 100%;
    min-height: 100%;
    overflow: hidden;
    display: flex;

    flex-direction: column;
    align-items: center;

    // &._loaded {
    // }
}

// adaptive image
._adaptive {
    width: 100%;
    height: 100%;
    object-position: 0 0;
    object-fit: cover;
}

// Main adaptive container
._container {
    max-width: $maxWidthContainer + px;

    @media (max-width: ($md1 + px)) {
        max-width: $maxWidthContainer + px;
    }
    // @media (max-width: ($maxWidth+px)) {
    //     max-width: 970px;
    // }
    @media (max-width: ($md2+px)) {
        max-width: 768px;
    }
    @media (max-width: ($md3+px)) {
        max-width: $md4 + px;
    }
    @media (max-width: ($md4+px)) {
        padding: 0 10px;
    }
}
/*===========================================*/
%main-adaptive-grid {
    padding: 0 3rem;
    $starting-width: 32;
    @include mq(phone) {
        //400px
        min-width: $starting-width + rem;
    }
    @include mq(phone-wide) {
        //480px
        min-width: ($phone-wideRem * $starting-width / $phoneRem) + rem;
    }
    @include mq(phablet) {
        //560px
        min-width: ($phabletRem * $starting-width / $phoneRem) + rem;
    }
    @include mq(tablet-small) {
        //640px
        min-width: ($tablet-smallRem * $starting-width / $phoneRem) + rem;
    }
    @include mq(tablet) {
        //768px
        min-width: ($tabletRem * $starting-width / $phoneRem) + rem;
    }
    @include mq(tablet-wide) {
        //1024px
        min-width: ($tablet-wideRem * $starting-width / $phoneRem) + rem;
    }
    @include mq(desktop) {
        //1248px
    }
    @include mq(desktop-wide) {
        //1440px
    }
}
/*===========================================*/
/*===========================================*/
/*===========================================*/
/*===========================================*/
